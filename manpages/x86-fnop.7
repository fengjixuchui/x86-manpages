.nh
.TH "X86-FNOP" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
FNOP - NO OPERATION
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode\fR	\fB\fCInstruction\fR	\fB\fC64\-Bit Mode\fR	\fB\fCCompat/Leg Mode\fR	\fB\fCDescription\fR
D9 D0	FNOP	Valid	Valid	No operation is performed.
.TE

.SH DESCRIPTION
.PP
Performs no FPU operation. This instruction takes up space in the
instruction stream but does not affect the FPU or machine context,
except the EIP register and the FPU Instruction Pointer.

.PP
This instruction’s operation is the same in non\-64\-bit modes and 64\-bit
mode.

.SH FPU FLAGS AFFECTED
.TS
allbox;
l l 
l l .
C0, C1, C2, C3	undefined.
.TE

.SH FLOATING\-POINT EXCEPTIONS
.PP
None

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#NM	CR0.EM
[
bit 2
]
 or CR0.TS
[
bit 3
]
 = 1.
#MF	T{
If there is a pending x87 FPU exception.
T}
#UD	If the LOCK prefix is used.
.TE

.SH REAL\-ADDRESS MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH VIRTUAL\-8086 MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH 64\-BIT MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
