.nh
.TH "X86-XBEGIN" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
XBEGIN - TRANSACTIONAL BEGIN
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode/Instruction\fR	\fB\fCOp/En\fR	\fB\fC64/32bit Mode Support\fR	\fB\fCCPUID Feature Flag\fR	\fB\fCDescription\fR
C7 F8 XBEGIN rel16	A	V/V	RTM	T{
Specifies the start of an RTM region. Provides a 16\-bit relative offset to compute the address of the fallback instruction address at which execution resumes following an RTM abort.
T}
C7 F8 XBEGIN rel32	A	V/V	RTM	T{
Specifies the start of an RTM region. Provides a 32\-bit relative offset to compute the address of the fallback instruction address at which execution resumes following an RTM abort.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand2	Operand3	Operand4
A	Offset	NA	NA	NA
.TE

.SH DESCRIPTION
.PP
The XBEGIN instruction specifies the start of an RTM code region. If the
logical processor was not already in transactional execution, then the
XBEGIN instruction causes the logical processor to transition into
transactional execution. The XBEGIN instruction that transitions the
logical processor into transactional execution is referred to as the
outermost XBEGIN instruction. The instruction also specifies a relative
offset to compute the address of the fallback code path following a
transactional abort.

.PP
On an RTM abort, the logical processor discards all architectural
register and memory updates performed during the RTM execution and
restores architectural state to that corresponding to the outermost
XBEGIN instruction. The fallback address following an abort is computed
from the outermost XBEGIN instruction.

.SH OPERATION
.SS XBEGIN
.PP
.RS

.nf
IF RTM\_NEST\_COUNT < MAX\_RTM\_NEST\_COUNT
    THEN
        RTM\_NEST\_COUNT++
        IF RTM\_NEST\_COUNT = 1 THEN
            IF 64\-bit Mode
                THEN
                        fallbackRIP ← RIP + SignExtend64(IMM)
                            (* RIP is instruction following XBEGIN instruction *)
                    ELSE
                        fallbackEIP ← EIP + SignExtend32(IMM)
                            (* EIP is instruction following XBEGIN instruction *)
            FI;
            IF (64\-bit mode)
                THEN IF (fallbackRIP is not canonical)
                    THEN #GP(0)
                FI;
                ELSE IF (fallbackEIP outside code segment limit)
                    THEN #GP(0)
                FI;
            FI;
            RTM\_ACTIVE ← 1
            Enter RTM Execution (* record register state, start tracking memory state*)
        FI; (* RTM\_NEST\_COUNT = 1 *)
    ELSE (* RTM\_NEST\_COUNT = MAX\_RTM\_NEST\_COUNT *)
        GOTO RTM\_ABORT\_PROCESSING
FI;
(* For any RTM abort condition encountered during RTM execution *)
RTM\_ABORT\_PROCESSING:
    Restore architectural register state
    Discard memory updates performed in transaction
    Update EAX with status
    RTM\_NEST\_COUNT ← 0
    RTM\_ACTIVE ← 0
    IF 64\-bit mode
        THEN
            RIP ← fallbackRIP
        ELSE
            EIP ← fallbackEIP
    FI;
END

.fi
.RE

.SH FLAGS AFFECTED
.PP
None

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT
.PP
.RS

.nf
XBEGIN: unsigned int \_xbegin( void );

.fi
.RE

.SH SIMD FLOATING\-POINT EXCEPTIONS
.PP
None

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	CPUID.(EAX=7, ECX=0):EBX.RTM
[
bit 11
]
=0.
	If LOCK prefix is used.
#GP(0)	T{
If the fallback address is outside the CS segment.
T}
.TE

.SH REAL\-ADDRESS MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#GP(0)	T{
If the fallback address is outside the address space 0000H and FFFFH.
T}
#UD	CPUID.(EAX=7, ECX=0):EBX.RTM
[
bit 11
]
=0.
	If LOCK prefix is used.
.TE

.SH VIRTUAL\-8086 MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#GP(0)	T{
If the fallback address is outside the address space 0000H and FFFFH.
T}
#UD	CPUID.(EAX=7, ECX=0):EBX.RTM
[
bit 11
]
=0.
	If LOCK prefix is used.
.TE

.SH COMPATIBILITY MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH 64\-BIT MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	CPUID.(EAX=7, ECX=0):EBX.RTM
[
bit 11
]
 = 0.
	If LOCK prefix is used.
#GP(0)	T{
If the fallback address is non\-canonical.
T}
.TE

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
Copyleft TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
