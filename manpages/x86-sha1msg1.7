.nh
.TH "X86-SHA1MSG1" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
SHA1MSG1 - PERFORM AN INTERMEDIATE CALCULATION FOR THE NEXT FOUR SHA1 MESSAGE DWORDS
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode/Instruction\fR	\fB\fCOp/En\fR	\fB\fC64/32 bit Mode Support\fR	\fB\fCCPUID Feature Flag\fR	\fB\fCDescription\fR
T{
NP 0F 38 C9 /r SHA1MSG1 xmm1, xmm2/m128
T}
	RM	V/V	SHA	T{
Performs an intermediate calculation for the next four SHA1 message dwords using previous message dwords from xmm1 and xmm2/m128, storing the result in xmm1.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l 
l l l l .
Op/En	Operand 1	Operand 2	Operand 3
RM	ModRM:reg (r, w)	ModRM:r/m (r)	NA
.TE

.SS Description
.PP
The SHA1MSG1 instruction is one of two SHA1 message scheduling
instructions. The instruction performs an intermediate calculation for
the next four SHA1 message dwords.

.SS Operation
.SS SHA1MSG1
.PP
.RS

.nf
W0←SRC1[127:96] ;
W1←SRC1[95:64] ;
W2←SRC1[63: 32] ;
W3←SRC1[31: 0] ;
W4←SRC2[127:96] ;
W5←SRC2[95:64] ;
DEST[127:96]←W2 XOR W0;
DEST[95:64]←W3 XOR W1;
DEST[63:32]←W4 XOR W2;
DEST[31:0]←W5 XOR W3;

.fi
.RE

.SS Intel C/C++ Compiler Intrinsic Equivalent
.PP
.RS

.nf
SHA1MSG1: \_\_m128i \_mm\_sha1msg1\_epu32(\_\_m128i, \_\_m128i);

.fi
.RE

.SS Flags Affected
.PP
None

.SS SIMD Floating\-Point Exceptions
.PP
None

.SS Other Exceptions
.PP
See Exceptions Type 4.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
