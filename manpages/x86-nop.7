.nh
.TH "X86-NOP" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
NOP - NO OPERATION
.TS
allbox;
l l l l l l 
l l l l l l .
\fB\fCOpcode\fR	\fB\fCInstruction\fR	\fB\fCOp/En\fR	\fB\fC64\-Bit Mode\fR	\fB\fCCompat/Leg Mode\fR	\fB\fCDescription\fR
NP 90	NOP	ZO	Valid	Valid	T{
One byte no\-operation instruction.
T}
NP 0F 1F /0	NOP r/m16	M	Valid	Valid	T{
Multi\-byte no\-operation instruction.
T}
NP 0F 1F /0	NOP r/m32	M	Valid	Valid	T{
Multi\-byte no\-operation instruction.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
ZO	NA	NA	NA	NA
M	ModRM:r/m (r)	NA	NA	NA
.TE

.SH DESCRIPTION
.PP
This instruction performs no operation. It is a one\-byte or multi\-byte
NOP that takes up space in the instruction stream but does not impact
machine context, except for the EIP register.

.PP
The multi\-byte form of NOP is available on processors with model
encoding:

.RS
.IP \(bu 2
CPUID.01H.EAX[Bytes 11:8] = 0110B or 1111B

.RE

.PP
The multi\-byte NOP instruction does not alter the content of a register
and will not issue a memory operation. The instruction’s operation is
the same in non\-64\-bit modes and 64\-bit mode.

.SH OPERATION
.PP
.RS

.nf
The one\-byte NOP instruction is an alias mnemonic for the XCHG (E)AX, (E)AX instruction.
The multi\-byte NOP instruction performs no operation on supported processors and generates undefined opcode
exception on processors that do not support the multi\-byte NOP instruction.
The memory operand form of the instruction allows software to create a byte sequence of “no operation” as one
instruction. For situations where multiple\-byte NOPs are needed, the recommended operations (32\-bit mode and
64\-bit mode) are:

.fi
.RE

.TS
allbox;
l l l 
l l l .
\fB\fCLength\fR	\fB\fCAssembly\fR	\fB\fCByte Sequence\fR
T{
2 bytes 3 bytes 4 bytes 5 bytes 6 bytes 7 bytes 8 bytes 9 bytes
T}
	66 NOP NOP DWORD ptr [EAX] NOP DWORD ptr [EAX + 00H] NOP DWORD ptr [EAX + EAX*1 + 00H] 66 NOP DWORD ptr [EAX + EAX*1 + 00H] NOP DWORD ptr [EAX + 00000000H] NOP DWORD ptr [EAX + EAX*1 + 00000000H] 66 NOP DWORD ptr [EAX + EAX*1 + 00000000H]	T{
66 90H 0F 1F 00H 0F 1F 40 00H 0F 1F 44 00 00H 66 0F 1F 44 00 00H 0F 1F 80 00 00 00 00H 0F 1F 84 00 00 00 00 00H 66 0F 1F 84 00 00 00 00 00H
T}
.TE

.PP
Table 4\-12. Recommended Multi\-Byte Sequence of NOP Instruction

.SH FLAGS AFFECTED
.PP
None

.SH EXCEPTIONS (ALL OPERATING MODES)
.PP
#UD If the LOCK prefix is used.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
