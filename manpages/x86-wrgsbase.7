.nh
.TH "X86-WRFSBASE-WRGSBASE" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
WRFSBASE-WRGSBASE - WRITE FS-GS SEGMENT BASE
.PP
Opcode/Instruction

.PP
Op/En

.PP
64/32\-bit Mode

.PP
CPUID Feature Flag

.PP
Description

.PP
F3 0F AE /2 WRFSBASE r32

.PP
M

.PP
V/I

.PP
FSGSBASE

.PP
Load the FS base address with the 32\-bit value in the source register.

.PP
F3 REX.W 0F AE /2 WRFSBASE r64

.PP
M

.PP
V/I

.PP
FSGSBASE

.PP
Load the FS base address with the 64\-bit value in the source register.

.PP
F3 0F AE /3 WRGSBASE r32

.PP
M

.PP
V/I

.PP
FSGSBASE

.PP
Load the GS base address with the 32\-bit value in the source register.

.PP
F3 REX.W 0F AE /3 WRGSBASE r64

.PP
M

.PP
V/I

.PP
FSGSBASE

.PP
Load the GS base address with the 64\-bit value in the source register.

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
M	ModRM:r/m (r)	NA	NA	NA
.TE

.SH DESCRIPTION
.PP
Loads the FS or GS segment base address with the general\-purpose
register indicated by the modR/M:r/m field.

.PP
The source operand may be either a 32\-bit or a 64\-bit general\-purpose
register. The REX.W prefix indicates the operand size is 64 bits. If no
REX.W prefix is used, the operand size is 32 bits; the upper 32 bits of
the source register are ignored and upper 32 bits of the base address
(for FS or GS) are cleared.

.PP
This instruction is supported only in 64\-bit mode.

.SH OPERATION
.PP
.RS

.nf
FS/GS segment base address ← SRC;

.fi
.RE

.SH FLAGS AFFECTED
.PP
None

.SH C/C++ COMPILER INTRINSIC EQUIVALENT
.PP
.RS

.nf
WRFSBASE: void \_writefsbase\_u32( unsigned int );

WRFSBASE: \_writefsbase\_u64( unsigned \_\_int64 );

WRGSBASE: void \_writegsbase\_u32( unsigned int );

WRGSBASE: \_writegsbase\_u64( unsigned \_\_int64 );

.fi
.RE

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	T{
The WRFSBASE and WRGSBASE instructions are not recognized in protected mode.
T}
.TE

.SH REAL\-ADDRESS MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	T{
The WRFSBASE and WRGSBASE instructions are not recognized in real\-address mode.
T}
.TE

.SH VIRTUAL\-8086 MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	T{
The WRFSBASE and WRGSBASE instructions are not recognized in virtual\-8086 mode.
T}
.TE

.SH COMPATIBILITY MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	T{
The WRFSBASE and WRGSBASE instructions are not recognized in compatibility mode.
T}
.TE

.SH 64\-BIT MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	If the LOCK prefix is used.
	If CR4.FSGSBASE
[
bit 16
]
 = 0.
	If CPUID.07H.0H:EBX.FSGSBASE
[
bit 0
]
 = 0
#GP(0)	T{
If the source register contains a non\-canonical address.
T}
.TE

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
