.nh
.TH "X86-PSHUFW" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
PSHUFW - SHUFFLE PACKED WORDS
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode/Instruction\fR	\fB\fCOp/En\fR	\fB\fC64\-Bit Mode\fR	\fB\fCCompat/Leg Mode\fR	\fB\fCDescription\fR
NP 0F 70 /mm1, mm2/m64, imm8	RMI	Valid	Valid	Shuffle the words in mm1.
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
RMI	ModRM:reg (w)	ModRM:r/m (r)	imm8	NA
.TE

.SH DESCRIPTION
.PP
Copies words from the source operand (second operand) and inserts them
in the destination operand (first operand) at word locations selected
with the order operand (third operand). This operation is similar to the
operation used by the PSHUFD instruction, which is illustrated in Figure 4\-16\&. For the PSHUFW instruction,
each 2\-\&bit field in the order operand selects the contents of one word
location in the destination operand. The encodings of the order operand
fields select words from the source operand to be copied to the
destination operand.

.PP
The source operand can be an MMX technology register or a 64\-bit memory
location. The destination operand is an MMX technology register. The
order operand is an 8\-bit immediate. Note that this instruction permits
a word in the source operand to be copied to more than one word location
in the destination operand.

.PP
In 64\-bit mode, using a REX prefix in the form of REX.R permits this
instruction to access additional registers (XMM8\-XMM15).

.SH OPERATION
.PP
.RS

.nf
DEST[15:0] ← (SRC >> (ORDER[1:0] * 16))[15:0];
DEST[31:16] ← (SRC >> (ORDER[3:2] * 16))[15:0];
DEST[47:32] ← (SRC >> (ORDER[5:4] * 16))[15:0];
DEST[63:48] ← (SRC >> (ORDER[7:6] * 16))[15:0];

.fi
.RE

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT
.PP
.RS

.nf
PSHUFW: \_\_m64 \_mm\_shuffle\_pi16(\_\_m64 a, int n)

.fi
.RE

.SH FLAGS AFFECTED
.PP
None.

.SH NUMERIC EXCEPTIONS
.PP
None.

.SH OTHER EXCEPTIONS
.PP
See Table 22\-7, “Exception Conditions
for SIMD/MMX Instructions with Memory Reference,” in the Intel® 64 and
IA\-32 Architectures Software Developer’s Manual, Volume 3A.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
