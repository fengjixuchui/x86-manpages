.nh
.TH "X86-PHMINPOSUW" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
PHMINPOSUW - PACKED HORIZONTAL WORD MINIMUM
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode/Instruction\fR	\fB\fCOp/En\fR	\fB\fC64/32 bit Mode Support\fR	\fB\fCCPUID Feature Flag\fR	\fB\fCDescription\fR
T{
66 0F 38 41 /r PHMINPOSUW xmm1, xmm2/m128
T}
	RM	V/V	SSE4\_1	T{
Find the minimum unsigned word in xmm1.
T}
T{
VEX.128.66.0F38.WIG 41 /r VPHMINPOSUW xmm1, xmm2/m128
T}
	RM	V/V	AVX	T{
Find the minimum unsigned word in xmm1.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
RM	ModRM:reg (w)	ModRM:r/m (r)	NA	NA
.TE

.SH DESCRIPTION
.PP
Determine the minimum unsigned word value in the source operand (second
operand) and place the unsigned word in the low word (bits 0\-15) of the
destination operand (first operand). The word index of the minimum value
is stored in bits 16\-18 of the destination operand. The remaining upper
bits of the destination are set to zero.

.PP
128\-bit Legacy SSE version: Bits (MAXVL\-1:128) of the corresponding XMM
destination register remain unchanged.

.PP
VEX.128 encoded version: Bits (MAXVL\-1:128) of the destination XMM
register are zeroed. VEX.vvvv is reserved and must be 1111b, VEX.L must
be 0, otherwise the instruction will #UD.

.SH OPERATION
.SS PHMINPOSUW (128\-bit Legacy SSE version)
.PP
.RS

.nf
INDEX ← 0;
MIN ← SRC[15:0]
IF (SRC[31:16] < MIN)
    THEN INDEX←1; MIN←SRC[31:16]; FI;
IF (SRC[47:32] < MIN)
    THEN INDEX←2; MIN←SRC[47:32]; FI;
* Repeat operation for words 3 through 6
IF (SRC[127:112] < MIN)
    THEN INDEX←7; MIN←SRC[127:112]; FI;
DEST[15:0] ← MIN;
DEST[18:16] ← INDEX;
DEST[127:19] ← 0000000000000000000000000000H;

.fi
.RE

.SS VPHMINPOSUW (VEX.128 encoded version)
.PP
.RS

.nf
INDEX ← 0
MIN ← SRC[15:0]
IF (SRC[31:16] < MIN) THEN INDEX←1; MIN←SRC[31:16]
IF (SRC[47:32] < MIN) THEN INDEX←2; MIN←SRC[47:32]
* Repeat operation for words 3 through 6
IF (SRC[127:112] < MIN) THEN INDEX←7; MIN←SRC[127:112]
DEST[15:0] ← MIN
DEST[18:16] ← INDEX
DEST[127:19] ← 0000000000000000000000000000H
DEST[MAXVL\-1:128] ← 0

.fi
.RE

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT
.PP
.RS

.nf
PHMINPOSUW: \_\_m128i \_mm\_minpos\_epu16( \_\_m128i packed\_words);

.fi
.RE

.SH FLAGS AFFECTED
.PP
None.

.SH SIMD FLOATING\-POINT EXCEPTIONS
.PP
None.

.SH OTHER EXCEPTIONS
.PP
See Exceptions Type 4; additionally

.TS
allbox;
l l 
l l .
#UD	If VEX.L = 1.
	If VEX.vvvv ≠ 1111B.
.TE

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
