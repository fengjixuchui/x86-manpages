.nh
.TH "X86-XTEST" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
XTEST - TEST IF IN TRANSACTIONAL EXECUTION
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode/Instruction\fR	\fB\fCOp/En\fR	\fB\fC64/32bit Mode Support\fR	\fB\fCCPUID Feature Flag\fR	\fB\fCDescription\fR
NP 0F 01 D6 XTEST	A	V/V	HLE or RTM	T{
Test if executing in a transactional region
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand2	Operand3	Operand4
A	NA	NA	NA	NA
.TE

.SH DESCRIPTION
.PP
The XTEST instruction queries the transactional execution status. If the
instruction executes inside a transactionally executing RTM region or a
transactionally executing HLE region, then the ZF flag is cleared, else
it is set.

.SH OPERATION
.SS XTEST
.PP
.RS

.nf
IF (RTM\_ACTIVE = 1 OR HLE\_ACTIVE = 1)
    THEN
        ZF ← 0
    ELSE
        ZF ← 1
FI;

.fi
.RE

.SH FLAGS AFFECTED
.PP
The ZF flag is cleared if the instruction is executed transactionally;
otherwise it is set to 1. The CF, OF, SF, PF, and AF, flags are cleared.

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT
.PP
.RS

.nf
XTEST: int \_xtest( void );

.fi
.RE

.SH SIMD FLOATING\-POINT EXCEPTIONS
.PP
None

.SH OTHER EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	CPUID.(EAX=7, ECX=0):EBX.HLE
[
bit 4
]
T{
 = 0 and CPUID.(EAX=7, ECX=0):EBX.RTM
T}
[
bit 11
]
 = 0.
	If LOCK prefix is used.
.TE

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
Copyleft TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
