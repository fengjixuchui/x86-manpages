.nh
.TH "X86-VMFUNC" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
VMFUNC - INVOKE VM FUNCTION
.TS
allbox;
l l l 
l l l .
\fB\fCOpcode/Instruction\fR	\fB\fCOp/En\fR	\fB\fCDescription\fR
NP 0F 01 D4 VMFUNC	ZO	T{
Invoke VM function specified in EAX.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
ZO	NA	NA	NA	NA
.TE

.SH DESCRIPTION
.PP
This instruction allows software in VMX non\-root operation to invoke a
VM function, which is processor functionality enabled and configured by
software in VMX root operation. The value of EAX selects the specific VM
function being invoked.

.PP
The behavior of each VM function (including any additional fault
checking) is specified in Section 25.5.5, “VM Functions”.

.SH OPERATION
.PP
.RS

.nf
Perform functionality of the VM function specified in EAX;

.fi
.RE

.SH FLAGS AFFECTED
.PP
Depends on the VM function specified in EAX. See Section 25.5.5, “VM
Functions”.

.SH PROTECTED MODE EXCEPTIONS (NOT INCLUDING THOSE DEFINED BY SPECIFIC VM FUNCTIONS)
.PP
#UD If executed outside VMX non\-root operation.

.PP
If “enable VM functions” VM\-execution control is 0.

.PP
If EAX ≥ 64.

.SH REAL\-ADDRESS MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH VIRTUAL\-8086 EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH 64\-BIT MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
