.nh
.TH "X86-FSQRT" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
FSQRT - SQUARE ROOT
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode\fR	\fB\fCInstruction\fR	\fB\fC64\-Bit Mode\fR	\fB\fCCompat/Leg Mode\fR	\fB\fCDescription\fR
D9 FA	FSQRT	Valid	Valid	T{
Computes square root of ST(0) and stores the result in ST(0).
T}
.TE

.SH DESCRIPTION
.PP
Computes the square root of the source value in the ST(0) register and
stores the result in ST(0).

.PP
The following table shows the results obtained when taking the square
root of various classes of numbers, assuming that neither overflow nor
underflow occurs.

.TS
allbox;
l l 
l l .
\fB\fCSRC (ST(0))\fR	\fB\fCDEST (ST(0))\fR
−∞	
*
−F	
*
−0	−0
+0	+0
+F	+F
+∞	+∞
NaN	NaN
.TE

.PP
Table 3\-37. FSQRT Results

.PP
.RS

.PP
F Meansfinitefloating\-pointvalue.

.PP
* Indicatesfloating\-pointinvalid\-arithmetic\-operand(#IA)exception.

.RE

.PP
This instruction’s operation is the same in non\-64\-bit modes and 64\-bit
mode.

.SH OPERATION
.PP
.RS

.nf
ST(0) ← SquareRoot(ST(0));

.fi
.RE

.SH FPU FLAGS AFFECTED
.TS
allbox;
l l 
l l .
C1	T{
Set to 0 if stack underflow occurred.
T}
	T{
Set if result was rounded up; cleared otherwise.
T}
C0, C2, C3	Undefined.
.TE

.SH FLOATING\-POINT EXCEPTIONS
.TS
allbox;
l l 
l l .
#IS	Stack underflow occurred.
#IA	T{
Source operand is an SNaN value or unsupported format.
T}
	T{
Source operand is a negative value (except for −0).
T}
#D	T{
Source operand is a denormal value.
T}
#P	T{
Value cannot be represented exactly in destination format.
T}
.TE

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#NM	CR0.EM
[
bit 2
]
 or CR0.TS
[
bit 3
]
 = 1.
#MF	T{
If there is a pending x87 FPU exception.
T}
#UD	If the LOCK prefix is used.
.TE

.SH REAL\-ADDRESS MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH VIRTUAL\-8086 MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH 64\-BIT MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
Copyleft TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
