.nh
.TH "X86-CMC" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
CMC - COMPLEMENT CARRY FLAG
.TS
allbox;
l l l l l l 
l l l l l l .
\fB\fCOpcode\fR	\fB\fCInstruction\fR	\fB\fCOp/En\fR	\fB\fC64\-bit Mode\fR	\fB\fCCompat/Leg Mode\fR	\fB\fCDescription\fR
F5	CMC	ZO	Valid	Valid	Complement CF flag.
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
ZO	NA	NA	NA	NA
.TE

.SH DESCRIPTION
.PP
Complements the CF flag in the EFLAGS register. CMC operation is the
same in non\-64\-bit modes and 64\-bit mode.

.SH OPERATION
.PP
.RS

.nf
EFLAGS.CF[bit 0]← NOT EFLAGS.CF[bit 0];

.fi
.RE

.SH FLAGS AFFECTED
.PP
The CF flag contains the complement of its original value. The OF, ZF,
SF, AF, and PF flags are unaffected.

.SH EXCEPTIONS (ALL OPERATING MODES)
.PP
#UD If the LOCK prefix is used.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
Copyleft TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
