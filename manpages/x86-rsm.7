.nh
.TH "X86-RSM" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
RSM - RESUME FROM SYSTEM MANAGEMENT MODE
.TS
allbox;
l l l l l l 
l l l l l l .
\fB\fCOpcode*\fR	\fB\fCInstruction\fR	\fB\fCOp/En\fR	\fB\fC64\-Bit Mode\fR	\fB\fCCompat/Leg Mode\fR	\fB\fCDescription\fR
0F AA	RSM	ZO	Valid	Valid	T{
Resume operation of interrupted program.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
ZO	NA	NA	NA	NA
.TE

.SH DESCRIPTION
.PP
Returns program control from system management mode (SMM) to the
application program or operating\-system procedure that was interrupted
when the processor received an SMM interrupt. The processor’s state is
restored from the dump created upon entering SMM. If the processor
detects invalid state information during state restoration, it enters
the shutdown state. The following invalid information can cause a
shutdown:

.RS
.IP \(bu 2
Any reserved bit of CR4 is set to 1.
.IP \(bu 2
Any illegal combination of bits in CR0, such as (PG=1 and PE=0) or
(NW=1 and CD=0).
.IP \(bu 2
(Intel Pentium and Intel486TM processors only.) The value stored in
the state dump base field is not a 32\-KByte aligned address.

.RE

.PP
The contents of the model\-specific registers are not affected by a
return from SMM.

.PP
The SMM state map used by RSM supports resuming processor context for
non\-64\-bit modes and 64\-bit mode.

.PP
See Chapter 34, “System Management Mode,” in the Intel® 64 and IA\-32
Architectures Software Developer’s Manual, Volume 3C, for more
information about SMM and the behavior of the RSM instruction.

.SH OPERATION
.PP
.RS

.nf
ReturnFromSMM;
IF (IA\-32e mode supported) or (CPUID DisplayFamily\_DisplayModel = 06H\_0CH )
    THEN
        ProcessorState ← Restore(SMMDump(IA\-32e SMM STATE MAP));
    Else
        ProcessorState ← Restore(SMMDump(Non\-32\-Bit\-Mode SMM STATE MAP));
FI

.fi
.RE

.SH FLAGS AFFECTED
.PP
All.

.SH PROTECTED MODE EXCEPTIONS
.TS
allbox;
l l 
l l .
#UD	T{
If an attempt is made to execute this instruction when the processor is not in SMM.
T}
	If the LOCK prefix is used.
.TE

.SH REAL\-ADDRESS MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH VIRTUAL\-8086 MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH COMPATIBILITY MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH 64\-BIT MODE EXCEPTIONS
.PP
Same exceptions as in protected mode.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
