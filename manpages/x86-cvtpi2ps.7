.nh
.TH "X86-CVTPI2PS" "7" "May 2019" "TTMO" "Intel x86-64 ISA Manual"
.SH NAME
CVTPI2PS - CONVERT PACKED DWORD INTEGERS TO PACKED SINGLE-PRECISION FP VALUES
.TS
allbox;
l l l l l 
l l l l l .
\fB\fCOpcode/Instruction\fR	\fB\fCOp/En\fR	\fB\fC64\-Bit Mode\fR	\fB\fCCompat/Leg Mode\fR	\fB\fCDescription\fR
NP 0F 2A /m64	RM	Valid	Valid	T{
Convert two signed doubleword integers from xmm.
T}
.TE

.SH INSTRUCTION OPERAND ENCODING
.TS
allbox;
l l l l l 
l l l l l .
Op/En	Operand 1	Operand 2	Operand 3	Operand 4
RM	ModRM:reg (w)	ModRM:r/m (r)	NA	NA
.TE

.SH DESCRIPTION
.PP
Converts two packed signed doubleword integers in the source operand
(second operand) to two packed single\-precision floating\-point values in
the destination operand (first operand).

.PP
The source operand can be an MMX technology register or a 64\-bit memory
location. The destination operand is an XMM register. The results are
stored in the low quadword of the destination operand, and the high
quadword remains unchanged. When a conversion is inexact, the value
returned is rounded according to the rounding control bits in the MXCSR
register.

.PP
This instruction causes a transition from x87 FPU to MMX technology
operation (that is, the x87 FPU top\-of\-stack pointer is set to 0 and the
x87 FPU tag word is set to all 0s [valid]). If this instruction is
executed while an x87 FPU floating\-point exception is pending, the
exception is handled before the CVTPI2PS instruction is executed.

.PP
In 64\-bit mode, use of the REX.R prefix permits this instruction to
access additional registers (XMM8\-XMM15).

.SH OPERATION
.PP
.RS

.nf
DEST[31:0] ← Convert\_Integer\_To\_Single\_Precision\_Floating\_Point(SRC[31:0]);
DEST[63:32] ← Convert\_Integer\_To\_Single\_Precision\_Floating\_Point(SRC[63:32]);
(* High quadword of destination unchanged *)

.fi
.RE

.SH INTEL C/C++ COMPILER INTRINSIC EQUIVALENT
.PP
.RS

.nf
CVTPI2PS: \_\_m128 \_mm\_cvtpi32\_ps(\_\_m128 a, \_\_m64 b)

.fi
.RE

.SH SIMD FLOATING\-POINT EXCEPTIONS
.PP
Precision

.SH OTHER EXCEPTIONS
.PP
See Table 22\-5, “Exception Conditions
for Legacy SIMD/MMX Instructions with XMM and FP Exception,” in the
Intel® 64 and IA\-32 Architectures Software Developer’s Manual, Volume
3B.

.SH SEE ALSO
.PP
x86\-manpages(7) for a list of other x86\-64 man pages.

.SH COLOPHON
.PP
This UNOFFICIAL, mechanically\-separated, non\-verified reference is
provided for convenience, but it may be incomplete or broken in
various obvious or non\-obvious ways. Refer to Intel® 64 and IA\-32
Architectures Software Developer’s Manual for anything serious.

.br
This page is generated by scripts; therefore may contain visual or semantical bugs. Please report them (or better, fix them) on https://github.com/ttmo-O/x86-manpages.

.br
MIT licensed by TTMO 2020 (Turkish Unofficial Chamber of Reverse Engineers - https://ttmo.re).
